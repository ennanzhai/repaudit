// Auto generated file
// Generated by Left-right parser
#include "../include/primitive.hpp"
using namespace std;
#include <sys/time.h>
int main(int argc, char const *argv[])
{

	int nums[] = {100, 500, 1000, 5000, 10000, 50000};
	
	for(int j = 0; j < 6; j++){
		FaultGraph fg = FaultGraph("topo-65536.conf");
		vector<Node> rep;
		for(int i = 1; i <= nums[j]; i++){
			std::ostringstream stringStream;
	  		stringStream << "172.28.228." << i;
	  		std::string ip = stringStream.str();
			Node node = fg.findNodeByIP(ip);
			rep.push_back(node);
		}
		struct timeval tp;
		gettimeofday(&tp, NULL);
		long start = tp.tv_sec * 1000 + tp.tv_usec / 1000; //get current timestamp in milliseconds

		fg.setReplicaByNode(rep);
		fg.genCNF("cnf");
		
		gettimeofday(&tp, NULL);
		long end = tp.tv_sec * 1000 + tp.tv_usec / 1000; //get current timestamp in milliseconds
		
		cout << nums[j] << "nodes cost " <<(double)(end - start) / 1000 << "s" <<endl;
	}
	return 0;
}